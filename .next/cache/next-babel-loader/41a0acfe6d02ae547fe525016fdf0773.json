{"ast":null,"code":"import commerce from '../../lib/commerce';\nimport { CLEAR_CUSTOMER, SET_CUSTOMER } from './actionTypes';\n/**\r\n * Fetch the customer information from Commerce.js. If the customer is not\r\n * logged in yet, an empty promise will be returned.\r\n */\n\nexport var setCustomer = function setCustomer() {\n  return function (dispatch) {\n    // First check is customer is logged in and just return out if they're not\n    var isLoggedIn = commerce.customer.isLoggedIn();\n\n    if (!isLoggedIn || isLoggedIn === false) {\n      return Promise.resolve(null);\n    }\n\n    return commerce.customer.about().then(function (customer) {\n      dispatch({\n        type: SET_CUSTOMER,\n        payload: customer.data\n      });\n    })[\"catch\"](function () {\n      // Most likely a 404, meaning the customer doesn't exist. It should be logged out\n      commerce.customer.logout();\n      dispatch({\n        type: SET_CUSTOMER,\n        payload: null\n      });\n    });\n  };\n};\n/**\r\n * Clear the logged in customer from state, and from Commerce.js.\r\n */\n\nexport var clearCustomer = function clearCustomer() {\n  return function (dispatch) {\n    commerce.customer.logout();\n    dispatch({\n      type: CLEAR_CUSTOMER\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/sandi/chec-store/store/actions/authenticateActions.js"],"names":["commerce","CLEAR_CUSTOMER","SET_CUSTOMER","setCustomer","dispatch","isLoggedIn","customer","Promise","resolve","about","then","type","payload","data","logout","clearCustomer"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oBAArB;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,eAA7C;AAEA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAM,UAACC,QAAD,EAAc;AAC7C;AACA,QAAMC,UAAU,GAAGL,QAAQ,CAACM,QAAT,CAAkBD,UAAlB,EAAnB;;AACA,QAAI,CAACA,UAAD,IAAeA,UAAU,KAAK,KAAlC,EAAyC;AACvC,aAAOE,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP;AACD;;AACD,WAAOR,QAAQ,CAACM,QAAT,CAAkBG,KAAlB,GAA0BC,IAA1B,CAA+B,UAACJ,QAAD,EAAc;AAClDF,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAET,YAAR;AAAsBU,QAAAA,OAAO,EAAEN,QAAQ,CAACO;AAAxC,OAAD,CAAR;AACD,KAFM,WAEE,YAAM;AACb;AACAb,MAAAA,QAAQ,CAACM,QAAT,CAAkBQ,MAAlB;AACAV,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAET,YAAR;AAAsBU,QAAAA,OAAO,EAAE;AAA/B,OAAD,CAAR;AACD,KANM,CAAP;AAOD,GAb0B;AAAA,CAApB;AAeP;AACA;AACA;;AACA,OAAO,IAAMG,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAM,UAACX,QAAD,EAAc;AAC/CJ,IAAAA,QAAQ,CAACM,QAAT,CAAkBQ,MAAlB;AACAV,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAEV;AAAR,KAAD,CAAR;AACD,GAH4B;AAAA,CAAtB","sourcesContent":["import commerce from '../../lib/commerce'\r\nimport { CLEAR_CUSTOMER, SET_CUSTOMER } from './actionTypes';\r\n\r\n/**\r\n * Fetch the customer information from Commerce.js. If the customer is not\r\n * logged in yet, an empty promise will be returned.\r\n */\r\nexport const setCustomer = () => (dispatch) => {\r\n  // First check is customer is logged in and just return out if they're not\r\n  const isLoggedIn = commerce.customer.isLoggedIn();\r\n  if (!isLoggedIn || isLoggedIn === false) {\r\n    return Promise.resolve(null);\r\n  }\r\n  return commerce.customer.about().then((customer) => {\r\n    dispatch({ type: SET_CUSTOMER, payload: customer.data })\r\n  }).catch(() => {\r\n    // Most likely a 404, meaning the customer doesn't exist. It should be logged out\r\n    commerce.customer.logout();\r\n    dispatch({ type: SET_CUSTOMER, payload: null })\r\n  });\r\n}\r\n\r\n/**\r\n * Clear the logged in customer from state, and from Commerce.js.\r\n */\r\nexport const clearCustomer = () => (dispatch) => {\r\n  commerce.customer.logout();\r\n  dispatch({ type: CLEAR_CUSTOMER });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}