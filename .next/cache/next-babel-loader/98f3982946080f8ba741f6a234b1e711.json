{"ast":null,"code":"import commerce from '../../lib/commerce';\nimport { CLEAR_CUSTOMER, SET_CUSTOMER } from './actionTypes';\n/**\r\n * Fetch the customer information from Commerce.js. If the customer is not\r\n * logged in yet, an empty promise will be returned.\r\n */\n\nexport const setCustomer = () => dispatch => {\n  // First check is customer is logged in and just return out if they're not\n  const isLoggedIn = commerce.customer.isLoggedIn();\n\n  if (!isLoggedIn || isLoggedIn === false) {\n    return Promise.resolve(null);\n  }\n\n  return commerce.customer.about().then(customer => {\n    dispatch({\n      type: SET_CUSTOMER,\n      payload: customer.data\n    });\n  }).catch(() => {\n    // Most likely a 404, meaning the customer doesn't exist. It should be logged out\n    commerce.customer.logout();\n    dispatch({\n      type: SET_CUSTOMER,\n      payload: null\n    });\n  });\n};\n/**\r\n * Clear the logged in customer from state, and from Commerce.js.\r\n */\n\nexport const clearCustomer = () => dispatch => {\n  commerce.customer.logout();\n  dispatch({\n    type: CLEAR_CUSTOMER\n  });\n};","map":{"version":3,"sources":["C:/Users/sandi/chec-store/store/actions/authenticateActions.js"],"names":["commerce","CLEAR_CUSTOMER","SET_CUSTOMER","setCustomer","dispatch","isLoggedIn","customer","Promise","resolve","about","then","type","payload","data","catch","logout","clearCustomer"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oBAArB;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,eAA7C;AAEA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,WAAW,GAAG,MAAOC,QAAD,IAAc;AAC7C;AACA,QAAMC,UAAU,GAAGL,QAAQ,CAACM,QAAT,CAAkBD,UAAlB,EAAnB;;AACA,MAAI,CAACA,UAAD,IAAeA,UAAU,KAAK,KAAlC,EAAyC;AACvC,WAAOE,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP;AACD;;AACD,SAAOR,QAAQ,CAACM,QAAT,CAAkBG,KAAlB,GAA0BC,IAA1B,CAAgCJ,QAAD,IAAc;AAClDF,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAET,YAAR;AAAsBU,MAAAA,OAAO,EAAEN,QAAQ,CAACO;AAAxC,KAAD,CAAR;AACD,GAFM,EAEJC,KAFI,CAEE,MAAM;AACb;AACAd,IAAAA,QAAQ,CAACM,QAAT,CAAkBS,MAAlB;AACAX,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAET,YAAR;AAAsBU,MAAAA,OAAO,EAAE;AAA/B,KAAD,CAAR;AACD,GANM,CAAP;AAOD,CAbM;AAeP;AACA;AACA;;AACA,OAAO,MAAMI,aAAa,GAAG,MAAOZ,QAAD,IAAc;AAC/CJ,EAAAA,QAAQ,CAACM,QAAT,CAAkBS,MAAlB;AACAX,EAAAA,QAAQ,CAAC;AAAEO,IAAAA,IAAI,EAAEV;AAAR,GAAD,CAAR;AACD,CAHM","sourcesContent":["import commerce from '../../lib/commerce'\r\nimport { CLEAR_CUSTOMER, SET_CUSTOMER } from './actionTypes';\r\n\r\n/**\r\n * Fetch the customer information from Commerce.js. If the customer is not\r\n * logged in yet, an empty promise will be returned.\r\n */\r\nexport const setCustomer = () => (dispatch) => {\r\n  // First check is customer is logged in and just return out if they're not\r\n  const isLoggedIn = commerce.customer.isLoggedIn();\r\n  if (!isLoggedIn || isLoggedIn === false) {\r\n    return Promise.resolve(null);\r\n  }\r\n  return commerce.customer.about().then((customer) => {\r\n    dispatch({ type: SET_CUSTOMER, payload: customer.data })\r\n  }).catch(() => {\r\n    // Most likely a 404, meaning the customer doesn't exist. It should be logged out\r\n    commerce.customer.logout();\r\n    dispatch({ type: SET_CUSTOMER, payload: null })\r\n  });\r\n}\r\n\r\n/**\r\n * Clear the logged in customer from state, and from Commerce.js.\r\n */\r\nexport const clearCustomer = () => (dispatch) => {\r\n  commerce.customer.logout();\r\n  dispatch({ type: CLEAR_CUSTOMER });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}